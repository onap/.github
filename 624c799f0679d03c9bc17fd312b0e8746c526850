{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7fb42bba_458ec84a",
        "filename": ".github/workflows/gerrit-required-bypassable-verify.yaml",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 6639
      },
      "writtenOn": "2025-07-16T08:53:29Z",
      "side": 1,
      "message": "I don\u0027t like this referencing of specific version. It obviously lead to the daily in the fix we are working on.\nDon\u0027t fully understand why we cannot use @master or even no version at all. if it is a security risk in the target file the same hacker can hack this file...\n\nAnyway I\u0027ll accept this is the current way of working and as Matt has shown me the source of this hah I am happy to approve it",
      "range": {
        "startLine": 76,
        "startChar": 63,
        "endLine": 76,
        "endChar": 104
      },
      "revId": "624c799f0679d03c9bc17fd312b0e8746c526850",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34c72d64_a025b0c4",
        "filename": ".github/workflows/gerrit-required-bypassable-verify.yaml",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 47
      },
      "writtenOn": "2025-07-16T11:31:03Z",
      "side": 1,
      "message": "Hi Toine, In short, using a specific commit hash in GitHub Actions is safer because it\u0027s immutable. It guarantees you\u0027re always using the exact same code.\n\nWhy Tags \u0026 Branches Are Risky? Mutable: Tags (like @v1) and branch names (like @main) are just pointers that can be moved. A bad actor could gain control of a repository and change a tag to point to new, malicious code. Your workflow, still using the same tag, would then unknowingly pull in and run that malicious code, potentially stealing your secrets or compromising your build. This is a potential risk.\n\nWhy Commit Hashes Are Safe? Immutable: A commit hash (e.g., @0db806afe33...) is a permanent, unique fingerprint for a specific version of the code. It can never be changed to point to anything else.Therefore by \"pinning\" to a commit hash, you ensure that your workflow will always execute the exact code you have reviewed and approved, protecting you from malicious updates.",
      "parentUuid": "7fb42bba_458ec84a",
      "range": {
        "startLine": 76,
        "startChar": 63,
        "endLine": 76,
        "endChar": 104
      },
      "revId": "624c799f0679d03c9bc17fd312b0e8746c526850",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ff15ebc_c8b6ef8c",
        "filename": ".github/workflows/gerrit-required-bypassable-verify.yaml",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 6639
      },
      "writtenOn": "2025-07-16T11:53:21Z",
      "side": 1,
      "message": "I don\u0027t know, i accept this is the way it is. But wonder if  the security concerns \u0026 risk are worth the cost of maintainability here. I suppose it will depend on who you ask.... \nI definitely I hope our code never will start using commit hashes to resolve \u0027dependencies\u0027 in whatever form, I can only guess at the additional cost of maintain such a way of working.....",
      "parentUuid": "34c72d64_a025b0c4",
      "range": {
        "startLine": 76,
        "startChar": 63,
        "endLine": 76,
        "endChar": 104
      },
      "revId": "624c799f0679d03c9bc17fd312b0e8746c526850",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "A maximum \u0027Code-Review\u0027 vote from a non-uploader is required for the \u0027Code-Review\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "624c799f0679d03c9bc17fd312b0e8746c526850",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "A maximum \u0027Verified\u0027 vote from \u0027ONAP Required GHA\u0027 and two other CI systems or another CI system and committer that is a non-uploader is required for the \u0027Verified\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX,user\u003donap.required.gha AND label:Verified\u003dMAX,count\u003e\u003d3 AND label:Verified\u003dMAX,user\u003dnon_uploader AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX,user=onap.required.gha AND label:Verified=MAX,count>=3 AND label:Verified=MAX,user=non_uploader AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX,user=onap.required.gha","label:Verified=MAX,user=non_uploader","label:Verified=MAX,count>=3"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "624c799f0679d03c9bc17fd312b0e8746c526850",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}